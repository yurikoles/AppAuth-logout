# Travis CI config for AppAuth
# Use the `wwtd` gem to test locally.
language: objective-c
osx_image: xcode10.2
# Tests iOS, macOS and tvOS: both static library and framework schemes.
env: 
# To generate this list, use `xcodebuild -showsdks` to get possible SDK values, and platforms.
# Use `instruments -s devices` to get the device name.
  - SCHEME=AppAuth_iOS DESTINATION="'platform=iOS Simulator,name=iPhone 6,OS=8.1'" SDK=iphonesimulator12.2
  - SCHEME=AppAuth_iOS DESTINATION="'platform=iOS Simulator,name=iPhone 6,OS=9.0'" SDK=iphonesimulator12.2
  - SCHEME=AppAuth_iOS DESTINATION="'platform=iOS Simulator,name=iPhone 6,OS=10.0'" SDK=iphonesimulator12.2
  - SCHEME=AppAuth_iOS DESTINATION="'platform=iOS Simulator,name=iPhone 6,OS=11.1'" SDK=iphonesimulator12.2
  - SCHEME=AppAuth-iOS DESTINATION="'platform=iOS Simulator,name=iPhone 6,OS=12.0'" SDK=iphonesimulator12.2
before_script:
  - gem update --system
  - gem install bundler
  - sudo gem install xcpretty
script:
# Breaking down this command:
# eval is used here, otherwise environment variables are not present.
# `set -o pipefail && ` is so that the return code isn't gobbled by xcpretty (per https://github.com/supermarin/xcpretty#usage)
# then it's standard xcodebuild | xcpretty.
  - eval "set -o pipefail && xcodebuild -project AppAuth.xcodeproj -scheme $SCHEME -sdk $SDK -destination $DESTINATION -enableCodeCoverage YES GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES OTHERCFLAGS='-Werror' test | xcpretty"
after_success:
  - bash <(curl -s https://codecov.io/bash)

